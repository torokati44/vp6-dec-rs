name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    defaults:
      run:
        shell: cmd /C call {0}

    name: Test Rust ${{ matrix.rust_version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.rust_version == 'nightly' }}
    strategy:
      fail-fast: false
      matrix:
        rust_version: ['stable', 'beta', 'nightly']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust_version }}
        override: true
        components: rustfmt, clippy
        target: wasm32-unknown-unknown

    - name: Add msys to PATH for clang
      if: matrix.os == 'windows-latest'
      shell: cmd /C call {0}
      run: echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH

    - name: run win build script
      if: matrix.os == 'windows-latest'
      shell: cmd /C call {0}
      run: call ./build-win.cmd

    - name: Check clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all --all-features --tests -- -D warnings

    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    # wasm-bindgen-cli version must match wasm-bindgen crate version.
    # Be sure to update in release_nightly.yml, web/Cargo.toml and web/README.md.
    - name: Install wasm-bindgen
      run: cargo install wasm-bindgen-cli --version 0.2.69

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: binaryen

    # conda is available only with fancy shell options
    # See https://github.com/marketplace/actions/setup-miniconda.
    - name: Install binaryen on Windows
      if: matrix.os == 'windows-latest'
      shell: cmd /C call {0}
      run: conda install -c conda-forge binaryen

    # conda is available only with fancy shell options
    # See https://github.com/marketplace/actions/setup-miniconda.
    - name: Install binaryen on non-Windows
      if: matrix.os != 'windows-latest'
      shell: bash -l {0}
      run: conda install -c conda-forge binaryen

    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --target wasm32-unknown-unknown --all-features

    # TODO: add wasm-bindgen and wasm-opt invokations

